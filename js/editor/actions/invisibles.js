// koffee 1.4.0
var Invisibles, _, kerror, prefs, ref,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

ref = require('kxk'), prefs = ref.prefs, kerror = ref.kerror, _ = ref._;

Invisibles = (function() {
    function Invisibles(editor) {
        this.editor = editor;
        this.onLineChanged = bind(this.onLineChanged, this);
        this.onLineInserted = bind(this.onLineInserted, this);
        this.onFile = bind(this.onFile, this);
        this.editor.on('file', this.onFile);
    }

    Invisibles.prototype.del = function() {
        return this.editor.removeListener('file', this.onFile);
    };

    Invisibles.prototype.onFile = function(file) {
        if (prefs.get("invisibles▸" + file)) {
            return this.show();
        } else {
            return this.clear();
        }
    };

    Invisibles.prototype.onLineInserted = function(li) {
        var kind, line, n, p, results, s;
        line = this.editor.line(li);
        kind = line.endsWith(' ') && 'trailing' || 'newline';
        this.editor.meta.add({
            line: li,
            html: '&#9687',
            start: line.length,
            end: line.length,
            yOffset: -1,
            clss: 'invisible ' + kind
        });
        s = this.editor.tabline(li);
        p = 0;
        results = [];
        while (p < s.length) {
            n = 1;
            if (s[p] === '\t') {
                n = 4 - (p % 4);
                s = s.splice(p, 1, _.padStart('', n));
                this.editor.meta.add({
                    line: li,
                    html: '&#9656',
                    start: p,
                    end: p,
                    yOffset: -1,
                    clss: 'invisible invisible-tab'
                });
            }
            results.push(p += n);
        }
        return results;
    };

    Invisibles.prototype.onLineChanged = function(li) {
        var metas;
        metas = this.editor.meta.metasAtLineIndex(li).filter(function(m) {
            return m[2].clss.startsWith('invisible');
        });
        if (!metas.length) {
            return kerror("no invisible meta at line " + li + "?");
        }
        this.editor.meta.delMeta(metas[0]);
        return this.onLineInserted(li);
    };

    Invisibles.prototype.activate = function() {
        var ref1;
        prefs.set("invisibles▸" + ((ref1 = this.editor.currentFile) != null ? ref1 : this.editor.name), true);
        return this.show();
    };

    Invisibles.prototype.deactivate = function() {
        prefs.set("invisibles▸" + this.editor.currentFile);
        return this.clear();
    };

    Invisibles.prototype.clear = function() {
        this.editor.removeListener('lineChanged', this.onLineChanged);
        this.editor.removeListener('lineInserted', this.onLineInserted);
        return this.editor.meta.delClass('invisible');
    };

    Invisibles.prototype.show = function() {
        var i, li, ref1, results;
        this.clear();
        this.editor.on('lineChanged', this.onLineChanged);
        this.editor.on('lineInserted', this.onLineInserted);
        results = [];
        for (li = i = 0, ref1 = this.editor.numLines(); 0 <= ref1 ? i < ref1 : i > ref1; li = 0 <= ref1 ? ++i : --i) {
            results.push(this.onLineInserted(li));
        }
        return results;
    };

    return Invisibles;

})();

module.exports = {
    actions: {
        toggleInvisibles: {
            name: 'Toggle Invisibles',
            text: 'toggle invisibles for current file',
            combo: 'ctrl+i'
        }
    },
    toggleInvisibles: function() {
        var ref1;
        if (!this.invisibles) {
            return;
        }
        if (prefs.get("invisibles▸" + ((ref1 = this.currentFile) != null ? ref1 : this.name), false)) {
            return this.invisibles.deactivate();
        } else {
            return this.invisibles.activate();
        }
    },
    initInvisibles: function() {
        return this.invisibles != null ? this.invisibles : this.invisibles = new Invisibles(this);
    }
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../../../coffee/editor/actions/invisibles.coffee