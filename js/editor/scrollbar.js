// koffee 1.12.0

/*
 0000000   0000000  00000000    0000000   000      000      0000000     0000000   00000000
000       000       000   000  000   000  000      000      000   000  000   000  000   000
0000000   000       0000000    000   000  000      000      0000000    000000000  0000000
     000  000       000   000  000   000  000      000      000   000  000   000  000   000
0000000    0000000  000   000   0000000   0000000  0000000  0000000    000   000  000   000
 */
var Scrollbar, Scroller, clamp, drag, elem, ref, stopEvent,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

ref = require('kxk'), stopEvent = ref.stopEvent, clamp = ref.clamp, elem = ref.elem, drag = ref.drag;

Scroller = require('../tools/scroller');

Scrollbar = (function() {
    function Scrollbar(editor) {
        this.editor = editor;
        this.update = bind(this.update, this);
        this.wheelScroll = bind(this.wheelScroll, this);
        this.onWheel = bind(this.onWheel, this);
        this.onDrag = bind(this.onDrag, this);
        this.onStart = bind(this.onStart, this);
        this.editor.scroll.on('scroll', this.update);
        this.editor.on('linesShown', this.update);
        this.editor.on('viewHeight', this.update);
        this.elem = elem({
            "class": 'scrollbar left'
        });
        this.editor.view.appendChild(this.elem);
        this.handle = elem({
            "class": 'scrollhandle left'
        });
        this.elem.appendChild(this.handle);
        this.scrollY = 0;
        this.drag = new drag({
            target: this.elem,
            onStart: this.onStart,
            onMove: this.onDrag,
            cursor: 'ns-resize'
        });
        this.elem.addEventListener('wheel', this.onWheel);
        this.editor.view.addEventListener('wheel', this.onWheel);
    }

    Scrollbar.prototype.del = function() {
        this.elem.removeEventListener('wheel', this.onWheel);
        return this.editor.view.removeEventListener('wheel', this.onWheel);
    };

    Scrollbar.prototype.onStart = function(drag, event) {
        var br, ln, ly, sy;
        br = this.elem.getBoundingClientRect();
        sy = clamp(0, this.editor.scroll.viewHeight, event.clientY - br.top);
        ln = parseInt(this.editor.scroll.numLines * sy / this.editor.scroll.viewHeight);
        ly = (ln - this.editor.scroll.viewLines / 2) * this.editor.scroll.lineHeight;
        return this.editor.scroll.to(ly);
    };

    Scrollbar.prototype.onDrag = function(drag) {
        var delta, vh;
        vh = this.editor.scroll.viewLines * this.editor.scroll.lineHeight;
        delta = (drag.delta.y / vh) * this.editor.scroll.fullHeight;
        return this.editor.scroll.by(delta);
    };

    Scrollbar.prototype.onWheel = function(event) {
        var scrollFactor;
        scrollFactor = function() {
            var f;
            f = 1;
            f *= 1 + 1 * event.shiftKey;
            f *= 1 + 3 * event.metaKey;
            return f *= 1 + 7 * event.altKey;
        };
        this.scrollY += event.deltaY * scrollFactor();
        if (this.scrollY) {
            window.requestAnimationFrame(this.wheelScroll);
        }
        return stopEvent(event);
    };

    Scrollbar.prototype.wheelScroll = function() {
        this.editor.scroll.by(this.scrollY);
        return this.scrollY = 0;
    };

    Scrollbar.prototype.update = function() {
        var bh, cf, cs, longColor, scrollHeight, scrollTop, shortColor, vh;
        if (this.editor.numLines() * this.editor.size.lineHeight < this.editor.viewHeight()) {
            this.handle.style.top = "0";
            this.handle.style.height = "0";
            return this.handle.style.width = "0";
        } else {
            bh = this.editor.numLines() * this.editor.size.lineHeight;
            vh = Math.min(this.editor.scroll.viewLines * this.editor.scroll.lineHeight, this.editor.viewHeight());
            scrollTop = parseInt((this.editor.scroll.scroll / bh) * vh);
            scrollHeight = parseInt(((this.editor.scroll.viewLines * this.editor.scroll.lineHeight) / bh) * vh);
            scrollHeight = Math.max(scrollHeight, parseInt(this.editor.size.lineHeight / 4));
            scrollTop = Math.min(scrollTop, this.editor.viewHeight() - scrollHeight);
            scrollTop = Math.max(0, scrollTop);
            this.handle.style.top = scrollTop + "px";
            this.handle.style.height = scrollHeight + "px";
            this.handle.style.width = "2px";
            cf = 1 - clamp(0, 1, (scrollHeight - 10) / 200);
            longColor = Scroller.colorForClass('scroller long');
            shortColor = Scroller.colorForClass('scroller short');
            cs = Scroller.fadeColor(longColor, shortColor, cf);
            return this.handle.style.backgroundColor = cs;
        }
    };

    return Scrollbar;

})();

module.exports = Scrollbar;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsYmFyLmpzIiwic291cmNlUm9vdCI6Ii4uLy4uL2NvZmZlZS9lZGl0b3IiLCJzb3VyY2VzIjpbInNjcm9sbGJhci5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7OztBQUFBLElBQUEsc0RBQUE7SUFBQTs7QUFRQSxNQUFtQyxPQUFBLENBQVEsS0FBUixDQUFuQyxFQUFFLHlCQUFGLEVBQWEsaUJBQWIsRUFBb0IsZUFBcEIsRUFBMEI7O0FBRTFCLFFBQUEsR0FBVyxPQUFBLENBQVEsbUJBQVI7O0FBRUw7SUFFQyxtQkFBQyxNQUFEO1FBQUMsSUFBQyxDQUFBLFNBQUQ7Ozs7OztRQUVBLElBQUMsQ0FBQSxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQWYsQ0FBa0IsUUFBbEIsRUFBMkIsSUFBQyxDQUFBLE1BQTVCO1FBQ0EsSUFBQyxDQUFBLE1BQU0sQ0FBQyxFQUFSLENBQVcsWUFBWCxFQUEyQixJQUFDLENBQUEsTUFBNUI7UUFDQSxJQUFDLENBQUEsTUFBTSxDQUFDLEVBQVIsQ0FBVyxZQUFYLEVBQTJCLElBQUMsQ0FBQSxNQUE1QjtRQUVBLElBQUMsQ0FBQSxJQUFELEdBQVEsSUFBQSxDQUFLO1lBQUEsQ0FBQSxLQUFBLENBQUEsRUFBTyxnQkFBUDtTQUFMO1FBQ1IsSUFBQyxDQUFBLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBYixDQUF5QixJQUFDLENBQUEsSUFBMUI7UUFFQSxJQUFDLENBQUEsTUFBRCxHQUFVLElBQUEsQ0FBSztZQUFBLENBQUEsS0FBQSxDQUFBLEVBQU8sbUJBQVA7U0FBTDtRQUNWLElBQUMsQ0FBQSxJQUFJLENBQUMsV0FBTixDQUFrQixJQUFDLENBQUEsTUFBbkI7UUFHQSxJQUFDLENBQUEsT0FBRCxHQUFZO1FBRVosSUFBQyxDQUFBLElBQUQsR0FBUSxJQUFJLElBQUosQ0FDSjtZQUFBLE1BQUEsRUFBUyxJQUFDLENBQUEsSUFBVjtZQUNBLE9BQUEsRUFBUyxJQUFDLENBQUEsT0FEVjtZQUVBLE1BQUEs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QU0sQ0FBQyxLQUFLLENBQUMsR0FBZCxHQUEwQixTQUFELEdBQVc7WUFDcEMsSUFBQyxDQUFBLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBZCxHQUEwQixZQUFELEdBQWM7WUFDdkMsSUFBQyxDQUFBLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBZCxHQUF1QjtZQUV2QixFQUFBLEdBQUssQ0FBQSxHQUFJLEtBQUEsQ0FBTSxDQUFOLEVBQVMsQ0FBVCxFQUFZLENBQUMsWUFBQSxHQUFhLEVBQWQsQ0FBQSxHQUFrQixHQUE5QjtZQUVULFNBQUEsR0FBYSxRQUFRLENBQUMsYUFBVCxDQUF1QixlQUF2QjtZQUNiLFVBQUEsR0FBYSxRQUFRLENBQUMsYUFBVCxDQUF1QixnQkFBdkI7WUFFYixFQUFBLEdBQUssUUFBUSxDQUFDLFNBQVQsQ0FBbUIsU0FBbkIsRUFBOEIsVUFBOUIsRUFBMEMsRUFBMUM7bUJBQ0wsSUFBQyxDQUFBLE1BQU0sQ0FBQyxLQUFLLENBQUMsZUFBZCxHQUFnQyxHQTFCcEM7O0lBRkk7Ozs7OztBQThCWixNQUFNLENBQUMsT0FBUCxHQUFpQiIsInNvdXJjZXNDb250ZW50IjpbIiMjI1xuIDAwMDAwMDAgICAwMDAwMDAwICAwMDAwMDAwMCAgICAwMDAwMDAwICAgMDAwICAgICAgMDAwICAgICAgMDAwMDAwMCAgICAgMDAwMDAwMCAgIDAwMDAwMDAwXG4wMDAgICAgICAgMDAwICAgICAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAgICAwMDAgICAgICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgMDAwXG4wMDAwMDAwICAgMDAwICAgICAgIDAwMDAwMDAgICAgMDAwICAgMDAwICAwMDAgICAgICAwMDAgICAgICAwMDAwMDAwICAgIDAwMDAwMDAwMCAgMDAwMDAwMFxuICAgICAwMDAgIDAwMCAgICAgICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgICAgMDAwICAgICAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMFxuMDAwMDAwMCAgICAwMDAwMDAwICAwMDAgICAwMDAgICAwMDAwMDAwICAgMDAwMDAwMCAgMDAwMDAwMCAgMDAwMDAwMCAgICAwMDAgICAwMDAgIDAwMCAgIDAwMFxuIyMjXG5cbnsgc3RvcEV2ZW50LCBjbGFtcCwgZWxlbSwgZHJhZyB9ID0gcmVxdWlyZSAna3hrJ1xuXG5TY3JvbGxlciA9IHJlcXVpcmUgJy4uL3Rvb2xzL3Njcm9sbGVyJ1xuXG5jbGFzcyBTY3JvbGxiYXJcblxuICAgIEA6IChAZWRpdG9yKSAtPlxuXG4gICAgICAgIEBlZGl0b3Iuc2Nyb2xsLm9uICdzY3JvbGwnIEB1cGRhdGVcbiAgICAgICAgQGVkaXRvci5vbiAnbGluZXNTaG93bicgICAgQHVwZGF0ZVxuICAgICAgICBAZWRpdG9yLm9uICd2aWV3SGVpZ2h0JyAgICBAdXBkYXRlXG5cbiAgICAgICAgQGVsZW0gPSBlbGVtIGNsYXNzOiAnc2Nyb2xsYmFyIGxlZnQnXG4gICAgICAgIEBlZGl0b3Iudmlldy5hcHBlbmRDaGlsZCBAZWxlbVxuXG4gICAgICAgIEBoYW5kbGUgPSBlbGVtIGNsYXNzOiAnc2Nyb2xsaGFuZGxlIGxlZnQnXG4gICAgICAgIEBlbGVtLmFwcGVuZENoaWxkIEBoYW5kbGVcblxuICAgICAgICAjIEBzY3JvbGxYICA9IDBcbiAgICAgICAgQHNjcm9sbFkgID0gMFxuXG4gICAgICAgIEBkcmFnID0gbmV3IGRyYWdcbiAgICAgICAgICAgIHRhcmdldDogIEBlbGVtXG4gICAgICAgICAgICBvblN0YXJ0OiBAb25TdGFydFxuICAgICAgICAgICAgb25Nb3ZlOiAgQG9uRHJhZ1xuICAgICAgICAgICAgY3Vyc29yOiAgJ25zLXJlc2l6ZSdcblxuICAgICAgICBAZWxlbSAgICAgICAuYWRkRXZlbnRMaXN0ZW5lciAnd2hlZWwnIEBvbldoZWVsXG4gICAgICAgIEBlZGl0b3Iudmlldy5hZGRFdmVudExpc3RlbmVyICd3aGVlbCcgQG9uV2hlZWxcblxuICAgIGRlbDogLT5cbiAgICAgICAgXG4gICAgICAgIEBlbGVtICAgICAgIC5yZW1vdmVFdmVudExpc3RlbmVyICd3aGVlbCcgQG9uV2hlZWxcbiAgICAgICAgQGVkaXRvci52aWV3LnJlbW92ZUV2ZW50TGlzdGVuZXIgJ3doZWVsJyBAb25XaGVlbFxuXG4gICAgIyAgMDAwMDAwMCAgMDAwMDAwMDAwICAgMDAwMDAwMCAgIDAwMDAwMDAwICAgMDAwMDAwMDAwXG4gICAgIyAwMDAgICAgICAgICAgMDAwICAgICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgICAgMDAwXG4gICAgIyAwMDAwMDAwICAgICAgMDAwICAgICAwMDAwMDAwMDAgIDAwMDAwMDAgICAgICAgMDAwXG4gICAgIyAgICAgIDAwMCAgICAgMDAwICAgICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgICAgMDAwXG4gICAgIyAwMDAwMDAwICAgICAgMDAwICAgICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgICAgMDAwXG5cbiAgICBvblN0YXJ0OiAoZHJhZywgZXZlbnQpID0+XG5cbiAgICAgICAgYnIgPSBAZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICAgICAgICBzeSA9IGNsYW1wIDAsIEBlZGl0b3Iuc2Nyb2xsLnZpZXdIZWlnaHQsIGV2ZW50LmNsaWVudFkgLSBici50b3BcbiAgICAgICAgbG4gPSBwYXJzZUludCBAZWRpdG9yLnNjcm9sbC5udW1MaW5lcyAqIHN5L0BlZGl0b3Iuc2Nyb2xsLnZpZXdIZWlnaHRcbiAgICAgICAgbHkgPSAobG4gLSBAZWRpdG9yLnNjcm9sbC52aWV3TGluZXMgLyAyKSAqIEBlZGl0b3Iuc2Nyb2xsLmxpbmVIZWlnaHRcbiAgICAgICAgQGVkaXRvci5zY3JvbGwudG8gbHlcblxuICAgICMgMDAwMDAwMCAgICAwMDAwMDAwMCAgICAwMDAwMDAwICAgIDAwMDAwMDBcbiAgICAjIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMFxuICAgICMgMDAwICAgMDAwICAwMDAwMDAwICAgIDAwMDAwMDAwMCAgMDAwICAwMDAwXG4gICAgIyAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDBcbiAgICAjIDAwMDAwMDAgICAgMDAwICAgMDAwICAwMDAgICAwMDAgICAwMDAwMDAwXG5cbiAgICBvbkRyYWc6IChkcmFnKSA9PlxuXG4gICAgICAgIHZoID0gQGVkaXRvci5zY3JvbGwudmlld0xpbmVzICogQGVkaXRvci5zY3JvbGwubGluZUhlaWdodFxuICAgICAgICBkZWx0YSA9IChkcmFnLmRlbHRhLnkgLyB2aCkgKiBAZWRpdG9yLnNjcm9sbC5mdWxsSGVpZ2h0XG4gICAgICAgIEBlZGl0b3Iuc2Nyb2xsLmJ5IGRlbHRhXG5cbiAgICAjIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAwMDAwMCAgMDAwMDAwMDAgIDAwMFxuICAgICMgMDAwIDAgMDAwICAwMDAgICAwMDAgIDAwMCAgICAgICAwMDAgICAgICAgMDAwXG4gICAgIyAwMDAwMDAwMDAgIDAwMDAwMDAwMCAgMDAwMDAwMCAgIDAwMDAwMDAgICAwMDBcbiAgICAjIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAgICAgMDAwICAgICAgIDAwMFxuICAgICMgMDAgICAgIDAwICAwMDAgICAwMDAgIDAwMDAwMDAwICAwMDAwMDAwMCAgMDAwMDAwMFxuXG4gICAgb25XaGVlbDogKGV2ZW50KSA9PlxuXG4gICAgICAgIHNjcm9sbEZhY3RvciA9IC0+XG4gICAgICAgICAgICBmICA9IDFcbiAgICAgICAgICAgIGYgKj0gMSArIDEgKiBldmVudC5zaGlmdEtleVxuICAgICAgICAgICAgZiAqPSAxICsgMyAqIGV2ZW50Lm1ldGFLZXlcbiAgICAgICAgICAgIGYgKj0gMSArIDcgKiBldmVudC5hbHRLZXlcblxuICAgICAgICAjIGlmIE1hdGguYWJzKGV2ZW50LmRlbHRhWCkgPj0gMipNYXRoLmFicyhldmVudC5kZWx0YVkpIG9yIE1hdGguYWJzKGV2ZW50LmRlbHRhWSkgPT0gMFxuICAgICAgICAgICAgIyBAc2Nyb2xsWCArPSBldmVudC5kZWx0YVhcbiAgICAgICAgIyBlbHNlXG4gICAgICAgIEBzY3JvbGxZICs9IGV2ZW50LmRlbHRhWSAqIHNjcm9sbEZhY3RvcigpXG5cbiAgICAgICAgIyBpZiBAc2Nyb2xsWCBvciBAc2Nyb2xsWVxuICAgICAgICBpZiBAc2Nyb2xsWVxuICAgICAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSBAd2hlZWxTY3JvbGxcblxuICAgICAgICBzdG9wRXZlbnQgZXZlbnRcblxuICAgIHdoZWVsU2Nyb2xsOiA9PlxuXG4gICAgICAgIEBlZGl0b3Iuc2Nyb2xsLmJ5IEBzY3JvbGxZICMsIEBzY3JvbGxYXG4gICAgICAgICMgQHNjcm9sbFggPSBAc2Nyb2xsWSA9IDBcbiAgICAgICAgQHNjcm9sbFkgPSAwXG5cbiAgICAjIDAwMCAgIDAwMCAgMDAwMDAwMDAgICAwMDAwMDAwICAgICAwMDAwMDAwICAgMDAwMDAwMDAwICAwMDAwMDAwMFxuICAgICMgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAgICAwMDAgICAgIDAwMFxuICAgICMgMDAwICAgMDAwICAwMDAwMDAwMCAgIDAwMCAgIDAwMCAgMDAwMDAwMDAwICAgICAwMDAgICAgIDAwMDAwMDBcbiAgICAjIDAwMCAgIDAwMCAgMDAwICAgICAgICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgICAgMDAwICAgICAwMDBcbiAgICAjICAwMDAwMDAwICAgMDAwICAgICAgICAwMDAwMDAwICAgIDAwMCAgIDAwMCAgICAgMDAwICAgICAwMDAwMDAwMFxuXG4gICAgdXBkYXRlOiA9PlxuXG4gICAgICAgIGlmIEBlZGl0b3IubnVtTGluZXMoKSAqIEBlZGl0b3Iuc2l6ZS5saW5lSGVpZ2h0IDwgQGVkaXRvci52aWV3SGVpZ2h0KClcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgQGhhbmRsZS5zdHlsZS50b3AgICAgID0gXCIwXCJcbiAgICAgICAgICAgIEBoYW5kbGUuc3R5bGUuaGVpZ2h0ICA9IFwiMFwiXG4gICAgICAgICAgICBAaGFuZGxlLnN0eWxlLndpZHRoICAgPSBcIjBcIlxuICAgICAgICAgICAgXG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgYmggICAgICAgICAgID0gQGVkaXRvci5udW1MaW5lcygpICogQGVkaXRvci5zaXplLmxpbmVIZWlnaHRcbiAgICAgICAgICAgIHZoICAgICAgICAgICA9IE1hdGgubWluIChAZWRpdG9yLnNjcm9sbC52aWV3TGluZXMgKiBAZWRpdG9yLnNjcm9sbC5saW5lSGVpZ2h0KSwgQGVkaXRvci52aWV3SGVpZ2h0KClcbiAgICAgICAgICAgIHNjcm9sbFRvcCAgICA9IHBhcnNlSW50IChAZWRpdG9yLnNjcm9sbC5zY3JvbGwgLyBiaCkgKiB2aFxuICAgICAgICAgICAgc2Nyb2xsSGVpZ2h0ID0gcGFyc2VJbnQgKChAZWRpdG9yLnNjcm9sbC52aWV3TGluZXMgKiBAZWRpdG9yLnNjcm9sbC5saW5lSGVpZ2h0KSAvIGJoKSAqIHZoXG4gICAgICAgICAgICBzY3JvbGxIZWlnaHQgPSBNYXRoLm1heCBzY3JvbGxIZWlnaHQsIHBhcnNlSW50IEBlZGl0b3Iuc2l6ZS5saW5lSGVpZ2h0LzRcbiAgICAgICAgICAgIHNjcm9sbFRvcCAgICA9IE1hdGgubWluIHNjcm9sbFRvcCwgQGVkaXRvci52aWV3SGVpZ2h0KCktc2Nyb2xsSGVpZ2h0XG4gICAgICAgICAgICBzY3JvbGxUb3AgICAgPSBNYXRoLm1heCAwLCBzY3JvbGxUb3BcblxuICAgICAgICAgICAgQGhhbmRsZS5zdHlsZS50b3AgICAgPSBcIiN7c2Nyb2xsVG9wfXB4XCJcbiAgICAgICAgICAgIEBoYW5kbGUuc3R5bGUuaGVpZ2h0ID0gXCIje3Njcm9sbEhlaWdodH1weFwiXG4gICAgICAgICAgICBAaGFuZGxlLnN0eWxlLndpZHRoICA9IFwiMnB4XCJcblxuICAgICAgICAgICAgY2YgPSAxIC0gY2xhbXAgMCwgMSwgKHNjcm9sbEhlaWdodC0xMCkvMjAwXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGxvbmdDb2xvciAgPSBTY3JvbGxlci5jb2xvckZvckNsYXNzICdzY3JvbGxlciBsb25nJ1xuICAgICAgICAgICAgc2hvcnRDb2xvciA9IFNjcm9sbGVyLmNvbG9yRm9yQ2xhc3MgJ3Njcm9sbGVyIHNob3J0J1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBjcyA9IFNjcm9sbGVyLmZhZGVDb2xvciBsb25nQ29sb3IsIHNob3J0Q29sb3IsIGNmXG4gICAgICAgICAgICBAaGFuZGxlLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGNzXG5cbm1vZHVsZS5leHBvcnRzID0gU2Nyb2xsYmFyXG4iXX0=
//# sourceURL=../../coffee/editor/scrollbar.coffee