
/*
0000000    000   000  00000000  00000000  00000000  00000000 
000   000  000   000  000       000       000       000   000
0000000    000   000  000000    000000    0000000   0000000  
000   000  000   000  000       000       000       000   000
0000000     0000000   000       000       00000000  000   000
 */
var Buffer, _, log, ref;

ref = require('kxk'), log = ref.log, _ = ref._;

Buffer = (function() {
  function Buffer(size) {
    var cols, ref1, ref2, rows;
    rows = Math.max(1, (ref1 = size != null ? size.rows : void 0) != null ? ref1 : 1);
    cols = Math.max(1, (ref2 = size != null ? size.cols : void 0) != null ? ref2 : 1);
    this.reset();
    this.resize(cols, rows);
  }

  Buffer.prototype.reset = function() {
    this.lines = [[]];
    this.cache = [[]];
    this.attr = (257 << 9) | 256;
    this.state = 0;
    this.x = 0;
    this.y = 0;
    this.ybase = 0;
    this.ydisp = 0;
    this.savedX = 0;
    this.savedY = 0;
    this.prefix = '';
    this.postfix = '';
    this.lch = null;
    this.refreshStart = 0;
    this.refreshEnd = 0;
    this.scrollTop = 0;
    return this.scrollBottom = 0;
  };

  Buffer.prototype.resize = function(cols, rows) {
    this.cols = Math.max(1, cols);
    this.rows = Math.max(1, rows);
    return this.scrollBottom = this.rows - 1;
  };

  Buffer.prototype.saveCursor = function() {
    this.savedX = this.x;
    return this.savedY = this.y;
  };

  Buffer.prototype.restoreCursor = function() {
    this.x = this.savedX;
    return this.y = this.savedY;
  };

  Buffer.prototype.updateRange = function(y) {
    if (y < this.refreshStart) {
      this.refreshStart = y;
    }
    if (y > this.refreshEnd) {
      return this.refreshEnd = y;
    }
  };

  return Buffer;

})();

module.exports = Buffer;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVmZmVyLmpzIiwic291cmNlUm9vdCI6Ii4iLCJzb3VyY2VzIjpbIiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7QUFBQSxJQUFBOztBQVFBLE1BQWEsT0FBQSxDQUFRLEtBQVIsQ0FBYixFQUFFLGFBQUYsRUFBTzs7QUFFRDtFQUVXLGdCQUFDLElBQUQ7QUFFVCxRQUFBO0lBQUEsSUFBQSxHQUFPLElBQUksQ0FBQyxHQUFMLENBQVMsQ0FBVCw4REFBeUIsQ0FBekI7SUFDUCxJQUFBLEdBQU8sSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFULDhEQUF5QixDQUF6QjtJQUVQLElBQUMsQ0FBQSxLQUFELENBQUE7SUFDQSxJQUFDLENBQUEsTUFBRCxDQUFRLElBQVIsRUFBYyxJQUFkO0VBTlM7O21CQVFiLEtBQUEsR0FBTyxTQUFBO0lBRUgsSUFBQyxDQUFBLEtBQUQsR0FBVyxDQUFDLEVBQUQ7SUFDWCxJQUFDLENBQUEsS0FBRCxHQUFXLENBQUMsRUFBRDtJQUNYLElBQUMsQ0FBQSxJQUFELEdBQVcsQ0FBQyxHQUFBLElBQU8sQ0FBUixDQUFBLEdBQWE7SUFDeEIsSUFBQyxDQUFBLEtBQUQsR0FBVztJQUNYLElBQUMsQ0FBQSxDQUFELEdBQVc7SUFDWCxJQUFDLENBQUEsQ0FBRCxHQUFXO0lBQ1gsSUFBQyxDQUFBLEtBQUQsR0FBVztJQUNYLElBQUMsQ0FBQSxLQUFELEdBQVc7SUFDWCxJQUFDLENBQUEsTUFBRCxHQUFXO0lBQ1gsSUFBQyxDQUFBLE1BQUQsR0FBVztJQUNYLElBQUMsQ0FBQSxNQUFELEdBQVc7SUFDWCxJQUFDLENBQUEsT0FBRCxHQUFXO0lBQ1gsSUFBQyxDQUFBLEdBQUQsR0FBVztJQUNYLElBQUMsQ0FBQSxZQUFELEdBQWdCO0lBQ2hCLElBQUMsQ0FBQSxVQUFELEdBQWdCO0lBQ2hCLElBQUMsQ0FBQSxTQUFELEdBQWdCO1dBQ2hCLElBQUMsQ0FBQSxZQUFELEdBQWdCO0VBbEJiOzttQkFvQlAsTUFBQSxHQUFRLFNBQUMsSUFBRCxFQUFPLElBQVA7SUFFSixJQUFDLENBQUEsSUFBRCxHQUFTLElBQUksQ0FBQyxHQUFMLENBQVMsQ0FBVCxFQUFZLElBQVo7SUFDVCxJQUFDLENBQUEsSUFBRCxHQUFTLElBQUksQ0FBQyxHQUFMLENBQVMsQ0FBVCxFQUFZLElBQVo7V0FDVCxJQUFDLENBQUEsWUFBRCxHQUFnQixJQUFDLENBQUEsSUFBRCxHQUFNO0VBSmxCOzttQkFNUixVQUFBLEdBQVksU0FBQTtJQUNSLElBQUMsQ0FBQSxNQUFELEdBQVUsSUFBQyxDQUFBO1dBQ1gsSUFBQyxDQUFBLE1BQUQsR0FBVSxJQUFDLENBQUE7RUFGSDs7bUJBSVosYUFBQSxHQUFlLFNBQUE7SUFDWCxJQUFDLENBQUEsQ0FBRCxHQUFLLElBQUMsQ0FBQTtXQUNOLElBQUMsQ0FBQSxDQUFELEdBQUssSUFBQyxDQUFBO0VBRks7O21CQUlmLFdBQUEsR0FBYSxTQUFDLENBQUQ7SUFDVCxJQUFHLENBQUEsR0FBSSxJQUFDLENBQUEsWUFBUjtNQUEwQixJQUFDLENBQUEsWUFBRCxHQUFnQixFQUExQzs7SUFDQSxJQUFHLENBQUEsR0FBSSxJQUFDLENBQUEsVUFBUjthQUEwQixJQUFDLENBQUEsVUFBRCxHQUFnQixFQUExQzs7RUFGUzs7Ozs7O0FBSWpCLE1BQU0sQ0FBQyxPQUFQLEdBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiIyMjXG4wMDAwMDAwICAgIDAwMCAgIDAwMCAgMDAwMDAwMDAgIDAwMDAwMDAwICAwMDAwMDAwMCAgMDAwMDAwMDAgXG4wMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgICAgIDAwMCAgICAgICAwMDAgICAgICAgMDAwICAgMDAwXG4wMDAwMDAwICAgIDAwMCAgIDAwMCAgMDAwMDAwICAgIDAwMDAwMCAgICAwMDAwMDAwICAgMDAwMDAwMCAgXG4wMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgICAgIDAwMCAgICAgICAwMDAgICAgICAgMDAwICAgMDAwXG4wMDAwMDAwICAgICAwMDAwMDAwICAgMDAwICAgICAgIDAwMCAgICAgICAwMDAwMDAwMCAgMDAwICAgMDAwXG4jIyNcblxueyBsb2csIF8gfSA9IHJlcXVpcmUgJ2t4aydcblxuY2xhc3MgQnVmZmVyXG5cbiAgICBjb25zdHJ1Y3RvcjogKHNpemUpIC0+IFxuICAgICAgICBcbiAgICAgICAgcm93cyA9IE1hdGgubWF4IDEsIHNpemU/LnJvd3MgPyAxXG4gICAgICAgIGNvbHMgPSBNYXRoLm1heCAxLCBzaXplPy5jb2xzID8gMVxuXG4gICAgICAgIEByZXNldCgpXG4gICAgICAgIEByZXNpemUgY29scywgcm93c1xuXG4gICAgcmVzZXQ6IC0+XG4gICAgICAgIFxuICAgICAgICBAbGluZXMgICA9IFtbXV1cbiAgICAgICAgQGNhY2hlICAgPSBbW11dXG4gICAgICAgIEBhdHRyICAgID0gKDI1NyA8PCA5KSB8IDI1NlxuICAgICAgICBAc3RhdGUgICA9IDBcbiAgICAgICAgQHggICAgICAgPSAwXG4gICAgICAgIEB5ICAgICAgID0gMFxuICAgICAgICBAeWJhc2UgICA9IDBcbiAgICAgICAgQHlkaXNwICAgPSAwXG4gICAgICAgIEBzYXZlZFggID0gMFxuICAgICAgICBAc2F2ZWRZICA9IDBcbiAgICAgICAgQHByZWZpeCAgPSAnJ1xuICAgICAgICBAcG9zdGZpeCA9ICcnXG4gICAgICAgIEBsY2ggICAgID0gbnVsbFxuICAgICAgICBAcmVmcmVzaFN0YXJ0ID0gMFxuICAgICAgICBAcmVmcmVzaEVuZCAgID0gMFxuICAgICAgICBAc2Nyb2xsVG9wICAgID0gMFxuICAgICAgICBAc2Nyb2xsQm90dG9tID0gMFxuICAgICAgICBcbiAgICByZXNpemU6IChjb2xzLCByb3dzKSAtPlxuICAgICAgICBcbiAgICAgICAgQGNvbHMgID0gTWF0aC5tYXggMSwgY29sc1xuICAgICAgICBAcm93cyAgPSBNYXRoLm1heCAxLCByb3dzXG4gICAgICAgIEBzY3JvbGxCb3R0b20gPSBAcm93cy0xXG4gICAgICAgIFxuICAgIHNhdmVDdXJzb3I6IC0+XG4gICAgICAgIEBzYXZlZFggPSBAeFxuICAgICAgICBAc2F2ZWRZID0gQHlcbiAgICAgICAgXG4gICAgcmVzdG9yZUN1cnNvcjogLT5cbiAgICAgICAgQHggPSBAc2F2ZWRYXG4gICAgICAgIEB5ID0gQHNhdmVkWVxuICAgICAgICBcbiAgICB1cGRhdGVSYW5nZTogKHkpIC0+XG4gICAgICAgIGlmIHkgPCBAcmVmcmVzaFN0YXJ0IHRoZW4gQHJlZnJlc2hTdGFydCA9IHlcbiAgICAgICAgaWYgeSA+IEByZWZyZXNoRW5kICAgdGhlbiBAcmVmcmVzaEVuZCAgID0geVxuXG5tb2R1bGUuZXhwb3J0cyA9IEJ1ZmZlclxuIl19
//# sourceURL=../coffee/buffer.coffee